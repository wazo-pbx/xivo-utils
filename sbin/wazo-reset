#!/bin/bash

# Copyright 2017 The Wazo Authors  (see the AUTHORS file)
# SPDX-License-Identifier: GPL-3.0+

force=0

usage() {
    cat >&2 <<EOF
Usage: $0 [-f]
Reset Wazo database and files.

  -f    do not prompt before resetting
EOF
	exit 1
}

on_reset_error() {
	cat >&2 <<EOF
An error occurred during the reset. Aborting.
EOF
	exit 1
}

while getopts ':f' opt; do
	case "$opt" in
		f)
			force=1
			;;
		*)
			usage
			;;
	esac
done

echo 'WARNING: This will erase all Wazo data and restart the Wazo services.'

if [ "$force" = 0 ]; then
	read -p 'Are you sure you want to reset Wazo [y/N]? ' answer
	if [ "$answer" != y -a "$answer" != Y ]; then
		exit 0
	fi
fi

# We force the XIVO_UUID to be the same since it's simpler to keep it than
# to update it.
if [ -z "$XIVO_UUID" ]; then
	echo "error: could not determine XIVO_UUID" >&2
	exit 1
fi

cd /tmp
trap on_reset_error ERR
xivo-service stop

echo 'Recreating postgresql database...'
xivo-init-db --drop --init

echo 'Updating XIVO_UUID in database...'
sudo -u postgres psql asterisk <<EOF
UPDATE infos SET uuid = '$XIVO_UUID';
EOF

echo 'Reconfiguring xivo-manage-db package...'
dpkg-reconfigure xivo-manage-db
echo 'Reconfiguring xivo-auth package...'
dpkg-reconfigure xivo-auth
echo 'Reconfiguring xivo-dird package...'
dpkg-reconfigure xivo-dird

echo 'Cleaning up xivo-provd configs and devices...'
rm -rf /var/lib/xivo-provd/jsondb/*
trap ERR
xivo-service start

echo 'Wazo reset succesful.'
